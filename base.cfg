[buildout]
extends-cache = .cache
show-picked-versions = true
extensions =
    mr.developer
sources-dir = mr-developer-src
index = https://pypi.python.org/simple/

parts =
    instance
    test
    code-analysis
    coverage
    test-coverage
    createcoverage
    i18ndude
    plone-helper-scripts
develop = .

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true
eggs =
    Plone
    collective.fhirpath [test]


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/collective
return-status-codes = False
flake8-max-complexity = 20
flake8-max-line-length = 88
flake8-ignore = Q000,W503,C812


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'collective.fhirpath', '--auto-color', '--auto-progress']


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

[versions]
# Don't use a released version of collective.fhirpath
collective.fhirpath =
zope.interface = 5.1.2
plone.api = 1.10.4
PyYAML    = >=5.4.1
